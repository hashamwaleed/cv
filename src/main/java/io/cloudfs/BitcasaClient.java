/*
 * BitcasaLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package io.cloudfs;

import io.cloudfs.controllers.*;
import io.cloudfs.http.client.HttpClient;

public class BitcasaClient {
    /**
     * Singleton access to UserOperations controller
     * @return	Returns the UserOperationsController instance 
     */
    public UserOperationsController getUserOperations() {
        return UserOperationsController.getInstance();
    }

    /**
     * Singleton access to CreateAccount controller
     * @return	Returns the CreateAccountController instance 
     */
    public CreateAccountController getCreateAccount() {
        return CreateAccountController.getInstance();
    }

    /**
     * Singleton access to FileOperations controller
     * @return	Returns the FileOperationsController instance 
     */
    public FileOperationsController getFileOperations() {
        return FileOperationsController.getInstance();
    }

    /**
     * Singleton access to FoldersOperations controller
     * @return	Returns the FoldersOperationsController instance 
     */
    public FoldersOperationsController getFoldersOperations() {
        return FoldersOperationsController.getInstance();
    }

    /**
     * Singleton access to ShareOperations controller
     * @return	Returns the ShareOperationsController instance 
     */
    public ShareOperationsController getShareOperations() {
        return ShareOperationsController.getInstance();
    }

    /**
     * Singleton access to HistoryOperations controller
     * @return	Returns the HistoryOperationsController instance 
     */
    public HistoryOperationsController getHistoryOperations() {
        return HistoryOperationsController.getInstance();
    }

    /**
     * Singleton access to TrashOperations controller
     * @return	Returns the TrashOperationsController instance 
     */
    public TrashOperationsController getTrashOperations() {
        return TrashOperationsController.getInstance();
    }

    /**
     * Singleton access to AdministratorsOperations controller
     * @return	Returns the AdministratorsOperationsController instance 
     */
    public AdministratorsOperationsController getAdministratorsOperations() {
        return AdministratorsOperationsController.getInstance();
    }

    /**
     * Singleton access to AuthenticationOperations controller
     * @return	Returns the AuthenticationOperationsController instance 
     */
    public AuthenticationOperationsController getAuthenticationOperations() {
        return AuthenticationOperationsController.getInstance();
    }

    /**
     * Get the shared http client currently being used for API calls
     * @return The http client instance currently being used
     */
    public HttpClient getSharedHttpClient() {
        return BaseController.getClientInstance();
    }
    
    /**
     * Set a shared http client to be used for API calls
     * @param httpClient The http client to use
     */
    public void setSharedHttpClient(HttpClient httpClient) {
        BaseController.setClientInstance(httpClient);
    }

    /**
     * Default constructor 
     */     
    public BitcasaClient() {
        Configuration.accountId = "TODO Add Value for parameter...";
    }

    /**
     * Client initialization constructor 
     */     
    public BitcasaClient(String accountId, String oAuthAccessToken) {
        this();
        if(accountId != null) Configuration.accountId = accountId;
        Configuration.oAuthAccessToken = oAuthAccessToken;
    }
}